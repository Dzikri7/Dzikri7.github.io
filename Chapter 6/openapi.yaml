openapi: 3.0.3
info:
  title: DOKUMEN API GIS DZIKRI - OpenAPI 3.0
  description: >-
    Disini Berisi Semua Dokumentasi API Dzikri
  termsOfService: https://raulmahya123.github.io/sweggergis/
  contact:
    email: izzatulhaq8@gmail.com
  license:
    name: Dzikri Backend
    url: https://pkg.go.dev/github.com/Dzikri7/backendsuperimbagelo
  version: 1.0.11
externalDocs:
  description: Repo GCF
  url: https://pkg.go.dev/github.com/Dzikri7/backendsuperimbagelo
servers:
  - url: https://asia-southeast2-testlogin-366704.cloudfunctions.net
tags:
  - name: Create GIS
    description: Data Geo Spasial
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pkg.go.dev/github.com/Dzikri7/backendsuperimbagelo
  - name: auth
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://pkg.go.dev/github.com/Dzikri7/backendsuperimbagelo
  - name: user
    description: Get Token and Authorize
paths:
  /gisall:
    get:
      tags:
        - data
      summary: Get Data Geospasial
      description: List Data Geospasial
      operationId: getGeoJSON
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Peta'
        '400':
          description: Invalid status value
  /function-16:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /postgis:  # Penambahan endpoint Create GIS
    post:
      tags:
        - Create GIS
      summary: Create GIS Data
      description: Add new GIS data
      operationId: createGIS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Peta' # Gunakan skema yang sesuai di sini
      responses:
        '201':
          description: Data successfully created
        '400':
          description: Invalid input or request body
      security:
        - token: []
  /createacount:
    post:
      tags:
        - user
      summary: create user
      description: create user
      operationId: createuser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /login:  # Penambahan endpoint Create GIS
    post:
      tags:
        - user
      summary: Login User Data
      description: Login User Data
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth' # Gunakan skema yang sesuai di sini
      responses:
        '201':
          description: Data successfully created
        '400':
          description: Invalid input or request body
      security:
        - token: []                      
components:
  schemas:
    Peta:
      type: object
      properties:
        type:
          type: string
          example: "Feature"
        properties:
          type: object
          properties:
            name:
              type: string
              example: "LOKASI"
        geometry:
          type: object
          properties:
            type:
              type: string
              example: "Point"
            coordinates:
              type: array
              items:
                - type: array
                  items:
                    - [125.6, 10.1]
    Auth:
      type: object
      properties:
        username:
          type: string
          example: dzikri
        password:
          type: string
          example: haq
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: fehguy
        token:
          type: string
          example: fehguy
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    token:
      type: apiKey
      name: token
      in: header
